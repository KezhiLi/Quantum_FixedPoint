%{
This is the main program;
The fuction of this program is using the FP_ADMM algorithm to reconstruct
the density matrix by numerical simulaiton in incremental measurement
rates . 

input:(1) the real density matrix X_true with rannk R which is generated by function
generate_rho_outlier() (2)the measurment matrix A which is generated by
function generate_AA_pauli;

output:the reconstructed density matrix X_hat and the normalized estimation
error result_3 under each eta. the normalized estimatin error of
incremental eta is saved in result_eta;
%}

clear 
clc

qubit=5;
N=2^qubit;
P=2^qubit;
eta=0.1;%the initialization of measuremnt rate %采样率的初始值
tol_1=1e-7; % when sq_error = resid'*resid  sq_error < tol_1 , iteration stops; %误差
kk=0.1;%  the coefficient of the number of outliers %干扰个数系数 
tt=0.01;%the coefficient of the magnitudes of outliers %干扰大小系数
R=1;%the rank of the real density matrix %真实密度矩阵的秩
maxite=30;% the max iterations %每次恢复中的最大迭代次数

[outlier,X_true]=generate_rho_outlier(N,P,R,kk,tt);% generate the density matrix X_true and the outliers %kk 干扰个数系数 tt干扰大小系数 R为真是密度矩阵的秩
AA=generate_AA_pauli(N,P,qubit);% genetate the complete Pauli measurment set
R_max=10;
result_eta=zeros(1,R_max);%the normalized error under each eta

for jj=1:R_max
    eta=0.05*jj;
    max_it=3;%using max_ite different measurement matrices under the same measurement rate 相同采样率下，用不同的测量矩阵恢复max_it次（有可能某次测量矩阵选的特别糟糕，导致无法恢复）
    result=zeros(1,max_it);
    
    for it=1:max_it
        [A,y]=generate_A_y(AA,eta,X_true,outlier,N,P);%generate A and y %按采样率产生A，y
        [X_hat, S,result_3]=Robust_Quantum_fixedpoint(y, A, maxite,tol_1,X_true); %reconstruct the density matrix , S is the outliers
        result(it)=result_3;
    end   
    
    result_eta(1,jj)=min( mean(result), 1 );%record the normalized error under eta ,if error greater than 1, record as 1 %eta采样率下的最终性能指标,取不同测量矩阵下的最优解
end

xx=0.05:0.05:0.5;
figure,
plot(xx,result_eta(1,:),'m*-');